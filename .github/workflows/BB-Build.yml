name: Build BoughBoot-dev
run-name: Build u-boot for BoughBoot-dev
on:
  workflow_dispatch:
    inputs:
      bb_ver:
        description: version
        required: true
        default: 1.0-dev
        type: string
      uboot_gh_repo:
        description: u-boot github repo
        required: true
        default: ArchemedIan/u-boot-rockchip
        type: string
      uboot_ref:
        description: u-boot ref
        required: true
        default: bb
        type: string
      rkbin_ref:
        description: rkbin ref
        required: true
        default: master
        type: string
      armbian_gh_repo:
        description: armbian build github repo
        required: true
        default: ArchemedIan/build
        type: string
      armbian_ref:
        description: armbian ref
        required: true
        default: BoughBoot
        type: string
jobs:
  build:
    name: ${{ matrix.boards.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        boards: 
          [
            {
              "name": "rk3588-orangepi-5-plus",
              "u-boot-defconfig": "orangepi-5-plus-rk3588_defconfig",
              "armbian_board": "orangepi5-plus",
            }
          ]

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          overprovision-lvm: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
      
      - name: Toolchain
        run: |
          sudo apt-get update
          sudo apt-get install gcc-12 gcc-12-aarch64-linux-gnu python3-pyelftools confget

          sudo ln -sf cpp-12 /usr/bin/cpp
          sudo ln -sf gcc-12 /usr/bin/gcc
          sudo ln -sf gcc-ar-12 /usr/bin/gcc-ar
          sudo ln -sf gcc-nm-12 /usr/bin/gcc-nm
          sudo ln -sf gcc-ranlib-12 /usr/bin/gcc-ranlib
          sudo ln -sf gcov-12 /usr/bin/gcov
          sudo ln -sf gcov-dump-12 /usr/bin/gcov-dump
          sudo ln -sf gcov-tool-12 /usr/bin/gcov-tool

          sudo ln -sf aarch64-linux-gnu-cpp-12 /usr/bin/aarch64-linux-gnu-cpp
          sudo ln -sf aarch64-linux-gnu-gcc-12 /usr/bin/aarch64-linux-gnu-gcc
          sudo ln -sf aarch64-linux-gnu-gcc-ar-12 /usr/bin/aarch64-linux-gnu-gcc-ar
          sudo ln -sf aarch64-linux-gnu-gcc-nm-12 /usr/bin/aarch64-linux-gnu-gcc-nm
          sudo ln -sf aarch64-linux-gnu-gcc-ranlib-12 /usr/bin/aarch64-linux-gnu-gcc-ranlib
          sudo ln -sf aarch64-linux-gnu-gcov-12 /usr/bin/aarch64-linux-gnu-gcov
          sudo ln -sf aarch64-linux-gnu-gcov-dump-12 /usr/bin/aarch64-linux-gnu-gcov-dump
          sudo ln -sf aarch64-linux-gnu-gcov-tool-12 /usr/bin/aarch64-linux-gnu-gcov-tool

      - name: Checkout rkbin - ${{ inputs.rkbin_ref }}
        uses: actions/checkout@v3
        with:
          repository: rockchip-linux/rkbin
          ref: ${{ inputs.rkbin_ref }}
          path: rkbin

      - name: Checkout u-boot - ${{ inputs.uboot_ref }} from ${{ inputs.uboot_gh_repo }}
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.uboot_gh_repo }}
          ref: ${{ inputs.uboot_ref }}
          path: u-boot
      
      - name: Checkout Armbian
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.armbian_gh_repo }}
          ref: ${{ inputs.armbian_ref }}
          path: armbian
              
      - name: Build u-boot - ${{ matrix.boards.u-boot-defconfig }}
        run: |
          export ROCKCHIP_TPL=../rkbin/$(confget -f rkbin/RKBOOT/RK3588MINIALL.ini -s LOADER_OPTION FlashData)
          export BL31=../rkbin/$(confget -f rkbin/RKTRUST/RK3588TRUST.ini -s BL31_OPTION PATH)
          cd u-boot
          make mrproper
          make ${{ matrix.boards.u-boot-defconfig }}
          make KCFLAGS="-fno-peephole2" CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)
          cd ..
          mkdir bb
          cp u-boot/uboot* bb/
          cp u-boot/uboot* bb/
          cp u-boot/idbloader.img bb/
          cp u-boot/idbloader-spi.img bb/
          rm -rf u-boot
      
      - name: Build Armbian - ${{ matrix.boards.armbian_board }}
        run: |
          version=${{ inputs.bb_ver }}
          rootdir=$(pwd)
          NewName=BoughBoot_$version
          cd armbian
          chmod a+x userpatches/customize-image.sh
          ./compile.sh BOARD=${{ matrix.boards.armbian_board }} BRANCH=legacy RELEASE=bookworm KERNEL_CONFIGURE=no CLEAN_LEVEL=alldebs,images,debs
          cd ..
          cp armbian/output/images/*${{ matrix.boards.armbian_board }}*.img bb/
  
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.boards.name }}
          path: bb/
